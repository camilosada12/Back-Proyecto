// <auto-generated />
using System;
using Entity.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250926022940_sqlserver")]
    partial class sqlserver
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.DocumentInfraction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("PaymentAgreementId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentAgreementId");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("inspectoraReportId")
                        .HasColumnType("int")
                        .HasColumnName("inspectoraReportId");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("PaymentAgreementId");

                    b.HasIndex("inspectoraReportId");

                    b.ToTable("DocumentInfraction", "Entities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            PaymentAgreementId = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            inspectoraReportId = 1,
                            is_deleted = false
                        },
                        new
                        {
                            id = 2,
                            PaymentAgreementId = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            inspectoraReportId = 2,
                            is_deleted = false
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.InspectoraReport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("report_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("total_fines")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("InspectoraReport", "Entities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            message = "se integra una nueva multa",
                            report_date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            total_fines = 2m
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            message = "se integra una nueva multa",
                            report_date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            total_fines = 3m
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.TypeInfraction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<int>("numer_smldv")
                        .HasColumnType("int");

                    b.Property<string>("type_Infraction")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("type_Infraction")
                        .IsUnique();

                    b.ToTable("typeInfraction", "Entities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "lanzar basura en un lugar publico",
                            is_deleted = false,
                            numer_smldv = 4,
                            type_Infraction = "infraccion de tipo uno"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "hacer mucho ruido en un sitio publico",
                            is_deleted = false,
                            numer_smldv = 8,
                            type_Infraction = "infraccion de tipo dos"
                        },
                        new
                        {
                            id = 3,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Portar armas, elementos cortantes, punzantes, o sustancias peligrosas en áreas comunes o lugares abiertos al público.",
                            is_deleted = false,
                            numer_smldv = 16,
                            type_Infraction = "infraccion de tipo Tres"
                        },
                        new
                        {
                            id = 4,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Agresión a la autoridad: Agredir o lanzar objetos a las autoridades de policía.",
                            is_deleted = false,
                            numer_smldv = 32,
                            type_Infraction = "infraccion de tipo Cuatro"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.TypePayment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("paymentAgreementId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("typePayment", "Entities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            name = "efectivo",
                            paymentAgreementId = 0
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            name = "nequi",
                            paymentAgreementId = 0
                        },
                        new
                        {
                            id = 3,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            name = "tarjeta crédito",
                            paymentAgreementId = 0
                        },
                        new
                        {
                            id = 4,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            name = "tarjeta débito",
                            paymentAgreementId = 0
                        },
                        new
                        {
                            id = 5,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            name = "daviplata",
                            paymentAgreementId = 0
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.UserInfraction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserNotificationId")
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<decimal>("amountToPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateInfraction")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("observations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stateInfraction")
                        .HasColumnType("int");

                    b.Property<int>("typeInfractionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserNotificationId");

                    b.HasIndex("typeInfractionId");

                    b.ToTable("userInfraction", "Entities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            UserId = 1,
                            UserNotificationId = 1,
                            active = true,
                            amountToPay = 0m,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            dateInfraction = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            observations = "la persona no opuso resistencia a la infracción",
                            stateInfraction = 0,
                            typeInfractionId = 1
                        },
                        new
                        {
                            id = 2,
                            UserId = 1,
                            UserNotificationId = 2,
                            active = true,
                            amountToPay = 0m,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            dateInfraction = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            observations = "portaba un cuchillo en la vía pública",
                            stateInfraction = 0,
                            typeInfractionId = 3
                        },
                        new
                        {
                            id = 3,
                            UserId = 2,
                            UserNotificationId = 1,
                            active = true,
                            amountToPay = 0m,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            dateInfraction = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            observations = "la persona se encontraba en estado de embriaguez",
                            stateInfraction = 0,
                            typeInfractionId = 2
                        },
                        new
                        {
                            id = 4,
                            UserId = 2,
                            UserNotificationId = 2,
                            active = true,
                            amountToPay = 0m,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            dateInfraction = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            observations = "agredió verbalmente a la autoridad",
                            stateInfraction = 0,
                            typeInfractionId = 4
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.UserNotification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("shippingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("userNotification", "Entities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            message = "tienes una infraccion por favor acercate antes del 12 de marzo para sucdazanar tu multa o podria iniciar un cobro coativo luego del plazo",
                            shippingDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            message = "tienes una infraccion por favor acercate antes del 12 de julio para sucdazanar tu multa o podria iniciar un cobro coativo luego del plazo",
                            shippingDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.ValueSmldv", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Current_Year")
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("minimunWage")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("value_smldv")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("Current_Year")
                        .IsUnique();

                    b.ToTable("valueSmldv", "Entities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Current_Year = 2024,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            minimunWage = 1300000m,
                            value_smldv = 43500m
                        },
                        new
                        {
                            id = 2,
                            Current_Year = 2022,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            minimunWage = 1100000m,
                            value_smldv = 43500m
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.AuthSession", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("AbsoluteExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ip")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastActivityAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("SessionId")
                        .IsUnique();

                    b.ToTable("AuthSession", "ModelSecurity");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.Form", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("form", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Icon = "pi pi-fw pi-home",
                            Route = "acuerdoPago",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Formulario de creacion de acuerdo de pago",
                            is_deleted = false,
                            name = "Formulario de acuerdo de pago"
                        },
                        new
                        {
                            id = 2,
                            Icon = "pi pi-fw pi-homeing",
                            Route = "CreacionMulta",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Formulario para agregar nuevas multas",
                            is_deleted = false,
                            name = "Formulario de creacion de multas"
                        },
                        new
                        {
                            id = 3,
                            Icon = "pi pi-fw pi-id-card",
                            Route = "tipos-multas",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Formulario tipo de  multas",
                            is_deleted = false,
                            name = "Formulario tipo de  multas"
                        },
                        new
                        {
                            id = 4,
                            Icon = "pi pi-fw pi-check-square",
                            Route = "notificaciones",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Formulario Notificacion de multas",
                            is_deleted = false,
                            name = "Formulario Notificacion de multas"
                        },
                        new
                        {
                            id = 5,
                            Icon = "pi pi-fw pi-file",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Formularios",
                            is_deleted = false,
                            name = "Formularios"
                        },
                        new
                        {
                            id = 6,
                            Icon = "pi pi-fw pi-clone",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Form modules",
                            is_deleted = false,
                            name = "Form modules"
                        },
                        new
                        {
                            id = 7,
                            Icon = "pi pi-fw pi-th-large",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Modulos",
                            is_deleted = false,
                            name = "Modulos"
                        },
                        new
                        {
                            id = 8,
                            Icon = "pi pi-fw pi-users",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "personas",
                            is_deleted = false,
                            name = "personas"
                        },
                        new
                        {
                            id = 9,
                            Icon = "pi pi-fw pi-lock-open",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "permisos",
                            is_deleted = false,
                            name = "permisos"
                        },
                        new
                        {
                            id = 10,
                            Icon = "pi pi-fw pi-key",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Rol Form Permission",
                            is_deleted = false,
                            name = "Rol Form Permission"
                        },
                        new
                        {
                            id = 11,
                            Icon = "pi pi-fw pi-users",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Roles",
                            is_deleted = false,
                            name = "Roles"
                        },
                        new
                        {
                            id = 12,
                            Icon = "pi pi-fw pi-user",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Usuarios",
                            is_deleted = false,
                            name = "Usuarios"
                        },
                        new
                        {
                            id = 13,
                            Icon = "pi pi-fw pi-user-plus",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Rol Usuario",
                            is_deleted = false,
                            name = "Rol Usuario"
                        },
                        new
                        {
                            id = 14,
                            Icon = "pi pi-fw pi-briefcase",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "departamento",
                            is_deleted = false,
                            name = "departamento"
                        },
                        new
                        {
                            id = 15,
                            Icon = "pi pi-fw pi-briefcase",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Tipo de Documento",
                            is_deleted = false,
                            name = "Tipo de Documento"
                        },
                        new
                        {
                            id = 16,
                            Icon = "pi pi-fw pi-briefcase",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Municipio",
                            is_deleted = false,
                            name = "Municipio"
                        },
                        new
                        {
                            id = 17,
                            Icon = "pi pi-fw pi-briefcase",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Frecuencia de pago",
                            is_deleted = false,
                            name = "Frecuencia de pago "
                        },
                        new
                        {
                            id = 18,
                            Icon = "pi pi-fw pi-briefcase",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Perfil",
                            is_deleted = false,
                            name = "Perfil"
                        },
                        new
                        {
                            id = 19,
                            Icon = "pi pi-fw pi-briefcase",
                            Route = "dashboard",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Notificacion de acuerdo ",
                            is_deleted = false,
                            name = "Notificacion de acuerdo"
                        },
                        new
                        {
                            id = 20,
                            Icon = "pi pi-fw pi-home",
                            Route = "consultar-ingresar",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "inicio ",
                            is_deleted = false,
                            name = "inicio"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.FormModule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("formid")
                        .HasColumnType("int")
                        .HasColumnName("formid");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<int>("moduleid")
                        .HasColumnType("int")
                        .HasColumnName("moduleid");

                    b.HasKey("id");

                    b.HasIndex("formid");

                    b.HasIndex("moduleid");

                    b.ToTable("formmodule", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 1,
                            is_deleted = false,
                            moduleid = 5
                        },
                        new
                        {
                            id = 2,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 2,
                            is_deleted = false,
                            moduleid = 2
                        },
                        new
                        {
                            id = 3,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 3,
                            is_deleted = false,
                            moduleid = 2
                        },
                        new
                        {
                            id = 4,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 4,
                            is_deleted = false,
                            moduleid = 2
                        },
                        new
                        {
                            id = 5,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 5,
                            is_deleted = false,
                            moduleid = 3
                        },
                        new
                        {
                            id = 6,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 6,
                            is_deleted = false,
                            moduleid = 3
                        },
                        new
                        {
                            id = 7,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 7,
                            is_deleted = false,
                            moduleid = 3
                        },
                        new
                        {
                            id = 8,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 8,
                            is_deleted = false,
                            moduleid = 3
                        },
                        new
                        {
                            id = 9,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 9,
                            is_deleted = false,
                            moduleid = 3
                        },
                        new
                        {
                            id = 10,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 10,
                            is_deleted = false,
                            moduleid = 3
                        },
                        new
                        {
                            id = 11,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 11,
                            is_deleted = false,
                            moduleid = 3
                        },
                        new
                        {
                            id = 12,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 12,
                            is_deleted = false,
                            moduleid = 3
                        },
                        new
                        {
                            id = 13,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 13,
                            is_deleted = false,
                            moduleid = 3
                        },
                        new
                        {
                            id = 14,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 14,
                            is_deleted = false,
                            moduleid = 4
                        },
                        new
                        {
                            id = 15,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 15,
                            is_deleted = false,
                            moduleid = 4
                        },
                        new
                        {
                            id = 16,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 16,
                            is_deleted = false,
                            moduleid = 4
                        },
                        new
                        {
                            id = 17,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 17,
                            is_deleted = false,
                            moduleid = 4
                        },
                        new
                        {
                            id = 18,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 18,
                            is_deleted = false,
                            moduleid = 4
                        },
                        new
                        {
                            id = 19,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 19,
                            is_deleted = false,
                            moduleid = 4
                        },
                        new
                        {
                            id = 20,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formid = 20,
                            is_deleted = false,
                            moduleid = 4
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.Module", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("module", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Inicio",
                            is_deleted = false,
                            name = "Inicio"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Contenido",
                            is_deleted = false,
                            name = "Contenido"
                        },
                        new
                        {
                            id = 3,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Gestion Avanzada",
                            is_deleted = false,
                            name = "Gestion Avanzada"
                        },
                        new
                        {
                            id = 4,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "perfil",
                            is_deleted = false,
                            name = "perfil"
                        },
                        new
                        {
                            id = 5,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "modulo de parametro",
                            is_deleted = false,
                            name = "modulo de parametro"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.Permission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("permission", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "permiso para leer formularios",
                            is_deleted = false,
                            name = "Leer"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "permiso para crear formularios",
                            is_deleted = false,
                            name = "Crear"
                        },
                        new
                        {
                            id = 3,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "permiso para editar formularios",
                            is_deleted = false,
                            name = "Editar"
                        },
                        new
                        {
                            id = 4,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "permiso para eliminar lógicamente formularios",
                            is_deleted = false,
                            name = "Eliminar"
                        },
                        new
                        {
                            id = 5,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "permiso para ver formularios eliminados",
                            is_deleted = false,
                            name = "VerEliminados"
                        },
                        new
                        {
                            id = 6,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "permiso para recuperar formularios eliminados",
                            is_deleted = false,
                            name = "Recuperar"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.Person", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("municipalityId")
                        .HasColumnType("int");

                    b.Property<int>("tipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("municipalityId");

                    b.ToTable("person", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            firstName = "Juan",
                            is_deleted = false,
                            lastName = "Pérez",
                            municipalityId = 1,
                            tipoUsuario = 3
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            firstName = "Sara",
                            is_deleted = false,
                            lastName = "Sofía",
                            municipalityId = 4,
                            tipoUsuario = 3
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<string>("ReplacedByTokenHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("refreshTokens");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("rol", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Rol con todos los permisos",
                            is_deleted = false,
                            name = "Administrador"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            description = "Rol con permisos limitados",
                            is_deleted = false,
                            name = "Finanza"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("EmailVerificationCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<DateTime?>("EmailVerificationExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("EmailVerifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("documentNumber")
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("documentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("PersonId")
                        .IsUnique()
                        .HasFilter("[PersonId] IS NOT NULL");

                    b.HasIndex("documentTypeId");

                    b.ToTable("user", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            id = 1,
                            EmailVerified = true,
                            EmailVerifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PasswordHash = "admin123",
                            PersonId = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            documentNumber = "1234567890",
                            documentTypeId = 1,
                            email = "camiloandreslosada901@gmail.com",
                            is_deleted = false
                        },
                        new
                        {
                            id = 2,
                            EmailVerified = true,
                            EmailVerifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PasswordHash = "sara12312",
                            PersonId = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            documentNumber = "0123432121",
                            documentTypeId = 2,
                            email = "sarita@gmail.com",
                            is_deleted = false
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.parameters.PaymentFrequency", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("dueDayOfMonth")
                        .HasColumnType("int");

                    b.Property<string>("intervalPage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("intervalPage");

                    b.ToTable("paymentFrequency", "Parameters");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            dueDayOfMonth = 16,
                            intervalPage = "UNICA",
                            is_deleted = false
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            dueDayOfMonth = 15,
                            intervalPage = "MENSUAL",
                            is_deleted = false
                        },
                        new
                        {
                            id = 3,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            dueDayOfMonth = 1,
                            intervalPage = "QUINCENAL",
                            is_deleted = false
                        },
                        new
                        {
                            id = 4,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            dueDayOfMonth = 10,
                            intervalPage = "BIMESTRAL",
                            is_deleted = false
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.parameters.department", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("daneCode")
                        .HasColumnType("int");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.HasKey("id");

                    b.HasIndex("daneCode")
                        .IsUnique();

                    b.HasIndex("name");

                    b.ToTable("department", "Parameters");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            daneCode = 5,
                            is_deleted = false,
                            name = "Antioquia"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            daneCode = 25,
                            is_deleted = false,
                            name = "Cundinamarca"
                        },
                        new
                        {
                            id = 3,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            daneCode = 76,
                            is_deleted = false,
                            name = "Valle del Cauca"
                        },
                        new
                        {
                            id = 4,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            daneCode = 11,
                            is_deleted = false,
                            name = "Bogotá, D.C."
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.parameters.documentType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("abbreviation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.HasKey("id");

                    b.HasIndex("abbreviation")
                        .IsUnique();

                    b.HasIndex("name");

                    b.ToTable("documentType", "Parameters");

                    b.HasData(
                        new
                        {
                            id = 1,
                            abbreviation = "CC",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            name = "Cédula de Ciudadanía"
                        },
                        new
                        {
                            id = 2,
                            abbreviation = "CE",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            name = "Cédula de Extranjería"
                        },
                        new
                        {
                            id = 3,
                            abbreviation = "TI",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            name = "Tarjeta de Identidad"
                        },
                        new
                        {
                            id = 4,
                            abbreviation = "PAS",
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            name = "Pasaporte"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.parameters.municipality", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("daneCode")
                        .HasColumnType("int");

                    b.Property<int>("departmentId")
                        .HasColumnType("int");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.HasKey("id");

                    b.HasIndex("daneCode")
                        .IsUnique();

                    b.HasIndex("name");

                    b.HasIndex("departmentId", "name")
                        .IsUnique();

                    b.ToTable("municipality", "Parameters");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            daneCode = 5001,
                            departmentId = 1,
                            is_deleted = false,
                            name = "Medellín"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            daneCode = 76001,
                            departmentId = 3,
                            is_deleted = false,
                            name = "Cali"
                        },
                        new
                        {
                            id = 3,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            daneCode = 11001,
                            departmentId = 4,
                            is_deleted = false,
                            name = "Bogotá"
                        },
                        new
                        {
                            id = 4,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            daneCode = 25754,
                            departmentId = 2,
                            is_deleted = false,
                            name = "Soacha"
                        });
                });

            modelBuilder.Entity("FineCalculationDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("formula")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("totalCalculation")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("typeInfractionId")
                        .HasColumnType("int");

                    b.Property<int>("valueSmldvId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("typeInfractionId");

                    b.HasIndex("valueSmldvId");

                    b.ToTable("FineCalculationDetail", "Entities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formula = "salario minimo * dias = smdlv",
                            is_deleted = false,
                            totalCalculation = 0m,
                            typeInfractionId = 1,
                            valueSmldvId = 1
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formula = "salario minimo * dias = smdlv",
                            is_deleted = false,
                            totalCalculation = 0m,
                            typeInfractionId = 2,
                            valueSmldvId = 1
                        },
                        new
                        {
                            id = 3,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formula = "salario minimo * dias = smdlv",
                            is_deleted = false,
                            totalCalculation = 0m,
                            typeInfractionId = 3,
                            valueSmldvId = 1
                        },
                        new
                        {
                            id = 4,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            formula = "salario minimo * dias = smdlv",
                            is_deleted = false,
                            totalCalculation = 0m,
                            typeInfractionId = 4,
                            valueSmldvId = 1
                        });
                });

            modelBuilder.Entity("PaymentAgreement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("AccruedInterest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("AgreementDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("AgreementEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AgreementStart")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("BaseAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CoactiveActivatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Installments")
                        .HasColumnType("int");

                    b.Property<bool>("IsCoactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastInterestAppliedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MonthlyFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OutstandingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("expeditionCedula")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("neighborhood")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("paymentFrequencyId")
                        .HasColumnType("int");

                    b.Property<int>("typePaymentId")
                        .HasColumnType("int");

                    b.Property<int>("userInfractionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("paymentFrequencyId");

                    b.HasIndex("typePaymentId");

                    b.HasIndex("userInfractionId");

                    b.ToTable("paymentAgreement", "Entities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            AccruedInterest = 0m,
                            AgreementDescription = "se realizará a 4 cuotas iguales",
                            AgreementEnd = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            AgreementStart = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            BaseAmount = 130500m,
                            Email = "user1@example.com",
                            Installments = 4,
                            IsCoactive = false,
                            IsPaid = false,
                            MonthlyFee = 32625m,
                            OutstandingAmount = 130500m,
                            PhoneNumber = "3101234567",
                            active = true,
                            address = "carrera 10",
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            expeditionCedula = new DateTime(2016, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            neighborhood = "eduardo santos",
                            paymentFrequencyId = 1,
                            typePaymentId = 1,
                            userInfractionId = 1
                        },
                        new
                        {
                            id = 2,
                            AccruedInterest = 0m,
                            AgreementDescription = "se realizará a 2 cuotas iguales",
                            AgreementEnd = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            AgreementStart = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            BaseAmount = 174000m,
                            Email = "user2@example.com",
                            Installments = 2,
                            IsCoactive = false,
                            IsPaid = false,
                            MonthlyFee = 87000m,
                            OutstandingAmount = 174000m,
                            PhoneNumber = "3009876543",
                            active = true,
                            address = "carrera 1",
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            expeditionCedula = new DateTime(2017, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            neighborhood = "panamá",
                            paymentFrequencyId = 2,
                            typePaymentId = 2,
                            userInfractionId = 2
                        },
                        new
                        {
                            id = 3,
                            AccruedInterest = 0m,
                            AgreementDescription = "se realizará a 8 cuotas iguales",
                            AgreementEnd = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            AgreementStart = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            BaseAmount = 348000m,
                            Email = "user3@example.com",
                            Installments = 8,
                            IsCoactive = false,
                            IsPaid = false,
                            MonthlyFee = 43500m,
                            OutstandingAmount = 348000m,
                            PhoneNumber = "3015558888",
                            active = true,
                            address = "calle 20 #15-40",
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            expeditionCedula = new DateTime(2018, 3, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            neighborhood = "la merced",
                            paymentFrequencyId = 2,
                            typePaymentId = 3,
                            userInfractionId = 3
                        },
                        new
                        {
                            id = 4,
                            AccruedInterest = 0m,
                            AgreementDescription = "se realizará a 12 cuotas iguales",
                            AgreementEnd = new DateTime(2026, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            AgreementStart = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            BaseAmount = 835200m,
                            Email = "user4@example.com",
                            Installments = 12,
                            IsCoactive = false,
                            IsPaid = false,
                            MonthlyFee = 69600m,
                            OutstandingAmount = 835200m,
                            PhoneNumber = "3024449999",
                            active = true,
                            address = "avenida 5 #45-12",
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            expeditionCedula = new DateTime(2019, 5, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false,
                            neighborhood = "san martin",
                            paymentFrequencyId = 3,
                            typePaymentId = 1,
                            userInfractionId = 4
                        });
                });

            modelBuilder.Entity("RolFormPermission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("formid");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int")
                        .HasColumnName("permissionid");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rolid");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("FormId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RolId", "FormId", "PermissionId")
                        .IsUnique()
                        .HasDatabaseName("IX_RolFormPermission_Unique");

                    b.ToTable("rolformpermission", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            id = 1,
                            FormId = 1,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 2,
                            FormId = 1,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 3,
                            FormId = 1,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 4,
                            FormId = 1,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 5,
                            FormId = 1,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 6,
                            FormId = 1,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 7,
                            FormId = 2,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 8,
                            FormId = 2,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 9,
                            FormId = 2,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 10,
                            FormId = 2,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 11,
                            FormId = 2,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 12,
                            FormId = 2,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 13,
                            FormId = 3,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 14,
                            FormId = 3,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 15,
                            FormId = 3,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 16,
                            FormId = 3,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 17,
                            FormId = 3,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 18,
                            FormId = 3,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 19,
                            FormId = 4,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 20,
                            FormId = 4,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 21,
                            FormId = 4,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 22,
                            FormId = 4,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 23,
                            FormId = 4,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 24,
                            FormId = 4,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 25,
                            FormId = 5,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 26,
                            FormId = 5,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 27,
                            FormId = 5,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 28,
                            FormId = 5,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 29,
                            FormId = 5,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 30,
                            FormId = 5,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 31,
                            FormId = 6,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 32,
                            FormId = 6,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 33,
                            FormId = 6,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 34,
                            FormId = 6,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 35,
                            FormId = 6,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 36,
                            FormId = 6,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 37,
                            FormId = 7,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 38,
                            FormId = 7,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 39,
                            FormId = 7,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 40,
                            FormId = 7,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 41,
                            FormId = 7,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 42,
                            FormId = 7,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 43,
                            FormId = 8,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 44,
                            FormId = 8,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 45,
                            FormId = 8,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 46,
                            FormId = 8,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 47,
                            FormId = 8,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 48,
                            FormId = 8,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 49,
                            FormId = 9,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 50,
                            FormId = 9,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 51,
                            FormId = 9,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 52,
                            FormId = 9,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 53,
                            FormId = 9,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 54,
                            FormId = 9,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 55,
                            FormId = 10,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 56,
                            FormId = 10,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 57,
                            FormId = 10,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 58,
                            FormId = 10,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 59,
                            FormId = 10,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 60,
                            FormId = 10,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 61,
                            FormId = 11,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 62,
                            FormId = 11,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 63,
                            FormId = 11,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 64,
                            FormId = 11,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 65,
                            FormId = 11,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 66,
                            FormId = 11,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 67,
                            FormId = 12,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 68,
                            FormId = 12,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 69,
                            FormId = 12,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 70,
                            FormId = 12,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 71,
                            FormId = 12,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 72,
                            FormId = 12,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 73,
                            FormId = 13,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 74,
                            FormId = 13,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 75,
                            FormId = 13,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 76,
                            FormId = 13,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 77,
                            FormId = 13,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 78,
                            FormId = 13,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 79,
                            FormId = 14,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 80,
                            FormId = 14,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 81,
                            FormId = 14,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 82,
                            FormId = 14,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 83,
                            FormId = 14,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 84,
                            FormId = 14,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 85,
                            FormId = 15,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 86,
                            FormId = 15,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 87,
                            FormId = 15,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 88,
                            FormId = 15,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 89,
                            FormId = 15,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 90,
                            FormId = 15,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 91,
                            FormId = 16,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 92,
                            FormId = 16,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 93,
                            FormId = 16,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 94,
                            FormId = 16,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 95,
                            FormId = 16,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 96,
                            FormId = 16,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 97,
                            FormId = 17,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 98,
                            FormId = 17,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 99,
                            FormId = 17,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 100,
                            FormId = 17,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 101,
                            FormId = 17,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 102,
                            FormId = 17,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 103,
                            FormId = 18,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 104,
                            FormId = 18,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 105,
                            FormId = 18,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 106,
                            FormId = 18,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 107,
                            FormId = 18,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 108,
                            FormId = 18,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 109,
                            FormId = 19,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 110,
                            FormId = 19,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 111,
                            FormId = 19,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 112,
                            FormId = 19,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 113,
                            FormId = 19,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 114,
                            FormId = 19,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 115,
                            FormId = 20,
                            PermissionId = 1,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 116,
                            FormId = 20,
                            PermissionId = 2,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 117,
                            FormId = 20,
                            PermissionId = 3,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 118,
                            FormId = 20,
                            PermissionId = 4,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 119,
                            FormId = 20,
                            PermissionId = 5,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 120,
                            FormId = 20,
                            PermissionId = 6,
                            RolId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 121,
                            FormId = 4,
                            PermissionId = 1,
                            RolId = 2,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 122,
                            FormId = 18,
                            PermissionId = 1,
                            RolId = 2,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 123,
                            FormId = 19,
                            PermissionId = 1,
                            RolId = 2,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 124,
                            FormId = 20,
                            PermissionId = 1,
                            RolId = 2,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        });
                });

            modelBuilder.Entity("RolUser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rolId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("RolId");

                    b.HasIndex("UserId");

                    b.ToTable("roluser", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            id = 1,
                            RolId = 1,
                            UserId = 1,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        },
                        new
                        {
                            id = 2,
                            RolId = 2,
                            UserId = 2,
                            active = false,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            is_deleted = false
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.DocumentInfraction", b =>
                {
                    b.HasOne("PaymentAgreement", "paymentAgreement")
                        .WithMany("documentInfraction")
                        .HasForeignKey("PaymentAgreementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_DocumentInfraction_PaymentAgreement");

                    b.HasOne("Entity.Domain.Models.Implements.Entities.InspectoraReport", "inspectoraReport")
                        .WithMany("documentInfraction")
                        .HasForeignKey("inspectoraReportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_DocumentInfraction_InspectoraReport");

                    b.Navigation("inspectoraReport");

                    b.Navigation("paymentAgreement");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.UserInfraction", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.ModelSecurity.User", "User")
                        .WithMany("UserInfraction")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Entities.UserNotification", "UserNotification")
                        .WithMany("userInfraction")
                        .HasForeignKey("UserNotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Entities.TypeInfraction", "typeInfraction")
                        .WithMany("userInfractions")
                        .HasForeignKey("typeInfractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("UserNotification");

                    b.Navigation("typeInfraction");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.FormModule", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.ModelSecurity.Form", "form")
                        .WithMany("FormModules")
                        .HasForeignKey("formid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_FormModule_Form");

                    b.HasOne("Entity.Domain.Models.Implements.ModelSecurity.Module", "module")
                        .WithMany("FormModules")
                        .HasForeignKey("moduleid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_FormModule_Module");

                    b.Navigation("form");

                    b.Navigation("module");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.Person", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.parameters.municipality", "municipality")
                        .WithMany("person")
                        .HasForeignKey("municipalityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("municipality");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.User", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.ModelSecurity.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("Entity.Domain.Models.Implements.ModelSecurity.User", "PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_User_Person");

                    b.HasOne("Entity.Domain.Models.Implements.parameters.documentType", "documentType")
                        .WithMany("person")
                        .HasForeignKey("documentTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Person");

                    b.Navigation("documentType");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.parameters.municipality", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.parameters.department", "department")
                        .WithMany("Municipality")
                        .HasForeignKey("departmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("FineCalculationDetail", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Entities.TypeInfraction", "typeInfraction")
                        .WithMany("fineCalculationDetail")
                        .HasForeignKey("typeInfractionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_TypeInfraction_FineCalculationDetail");

                    b.HasOne("Entity.Domain.Models.Implements.Entities.ValueSmldv", "valueSmldv")
                        .WithMany("fineCalculationDetail")
                        .HasForeignKey("valueSmldvId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_ValueSmldv_FineCalculationDetail");

                    b.Navigation("typeInfraction");

                    b.Navigation("valueSmldv");
                });

            modelBuilder.Entity("PaymentAgreement", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.parameters.PaymentFrequency", "paymentFrequency")
                        .WithMany("paymentAgreement")
                        .HasForeignKey("paymentFrequencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Entities.TypePayment", "TypePayment")
                        .WithMany("PaymentAgreements")
                        .HasForeignKey("typePaymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PaymentAgreement_TypePayment");

                    b.HasOne("Entity.Domain.Models.Implements.Entities.UserInfraction", "userInfraction")
                        .WithMany("paymentAgreement")
                        .HasForeignKey("userInfractionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PaymentAgreement_UserInfraction");

                    b.Navigation("TypePayment");

                    b.Navigation("paymentFrequency");

                    b.Navigation("userInfraction");
                });

            modelBuilder.Entity("RolFormPermission", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.ModelSecurity.Form", "Form")
                        .WithMany("rol_form_permission")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolFormPermission_Form");

                    b.HasOne("Entity.Domain.Models.Implements.ModelSecurity.Permission", "Permission")
                        .WithMany("rol_form_permission")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolFormPermission_Permission");

                    b.HasOne("Entity.Domain.Models.Implements.ModelSecurity.Rol", "Rol")
                        .WithMany("rol_form_permission")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolFormPermission_Rol");

                    b.Navigation("Form");

                    b.Navigation("Permission");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("RolUser", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.ModelSecurity.Rol", "Rol")
                        .WithMany("rolUsers")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolUser_Rol");

                    b.HasOne("Entity.Domain.Models.Implements.ModelSecurity.User", "User")
                        .WithMany("rolUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolUser_User");

                    b.Navigation("Rol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.InspectoraReport", b =>
                {
                    b.Navigation("documentInfraction");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.TypeInfraction", b =>
                {
                    b.Navigation("fineCalculationDetail");

                    b.Navigation("userInfractions");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.TypePayment", b =>
                {
                    b.Navigation("PaymentAgreements");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.UserInfraction", b =>
                {
                    b.Navigation("paymentAgreement");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.UserNotification", b =>
                {
                    b.Navigation("userInfraction");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Entities.ValueSmldv", b =>
                {
                    b.Navigation("fineCalculationDetail");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.Form", b =>
                {
                    b.Navigation("FormModules");

                    b.Navigation("rol_form_permission");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.Module", b =>
                {
                    b.Navigation("FormModules");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.Permission", b =>
                {
                    b.Navigation("rol_form_permission");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.Person", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.Rol", b =>
                {
                    b.Navigation("rolUsers");

                    b.Navigation("rol_form_permission");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.ModelSecurity.User", b =>
                {
                    b.Navigation("UserInfraction");

                    b.Navigation("rolUsers");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.parameters.PaymentFrequency", b =>
                {
                    b.Navigation("paymentAgreement");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.parameters.department", b =>
                {
                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.parameters.documentType", b =>
                {
                    b.Navigation("person");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.parameters.municipality", b =>
                {
                    b.Navigation("person");
                });

            modelBuilder.Entity("PaymentAgreement", b =>
                {
                    b.Navigation("documentInfraction");
                });
#pragma warning restore 612, 618
        }
    }
}
